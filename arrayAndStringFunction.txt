const numbers = [9, 2, 5, 4, 6, 7, 3, 1, 8]
const names = ['Amanda', 'Barbara', 'Caleb', 'Daniela', 'Sarah', 'Jason', 'Natasha', 'Hannah', 'Aaron', 'Gabriel'];
const person = [
    { name: 'ralph', age: 40 },
    { name: 'shenron', age: 10 },
    { name: 'gadwin', age: 5 },

]

const max = () => {
    return numbers.reduce((a, b) => a > b ? a : b)
}

const min = () => {
    return numbers.reduce((a, b) => a < b ? a : b)
}

const sumUp = () => {
    return numbers.reduce((a, b) => a + b, 0)
}

const newSlice = () => {
    return names.slice(0, 5)
}

const mapping = () => {
    return numbers.reduce((a, b) => a - b)
}

const pushObject = () => {
    person.push({
        name: 'santolorin',
        age: '500'
    })
    return person
}

const poppers = () => {
    person.pop();
    return person
}

const shifter = () => {
    const del = person.shift()
    return del
}

const unshifter = () => {
    person.unshift({
        name: 'len', age: 10
    })
    return person
}

const splices = () => {
    numbers.splice(0, 3, 10)
    return numbers
}

const filtering = () => {
    return person.filter((a) => a.age === 5 || a.name === 'shenron')

}

const mappers = () => {
    return numbers.map((a) => a * 2)
}

const namers = () => {
    return names.map((a, i) => a.toUpperCase() + " " + i + 1)
}

const objmap = () => {
    return person.map((a) => a.name.toUpperCase())
}

const finders = () => {
    return person.find((a) => a.name.toLowerCase() === 'shenron')
}

const finders2 = () => {
    return names.find((a) => a.toLowerCase() === 'sarah')
}

const findIndex = () => {
    // return names.findIndex((a) => a === 'Sarah')
    return person.findIndex((a) => a.name === 'gadwin')

}

const every = () => {
    return names.every((a) => a.includes('a'))
}
const some = () => {
    return names.some((a) => a.includes('pa'))
}

const findNumber = () => {
    const names = 'RALPH'
    // return numbers.find((a) => a === 7)
    // return person.find((a) => a.name.toLowerCase() === names.toLowerCase())
    return person.find((a) => a.name === 'ralph')
}

const lookLastIndexOf = () => {
    return names.lastIndexOf('Sarah')
}

const sorted = () => {
    return numbers.sort((a, b) => b - a)
}

const randomNumber = () => {
    const newArr = []
    for (let i = 0; i < 5; i++) {
        newArr.push(Math.floor(Math.random() * 100 + 1));
        newArr.sort((a, b) => a - b)
    }
    return newArr
}

const concaters =() => {
    return numbers.concat(names)
}

const cap = () => {
    return names.forEach((a) => a.toUpperCase())
}
const tos = () => {
    return numbers.map((a) => a.toString())
}
console.log(tos())

====================================
STRING METHOD

// charAt()
let str = "Hello";
let char = str.charAt(1);  // "e"

// charCodeAt()
let charCode = str.charCodeAt(1);  // 101

// concat()
let greeting = "Hello".concat(" ", "World");  // "Hello World"

// includes()
let hasHello = str.includes("Hell");  // true

// indexOf()
let index = str.indexOf("e");  // 1

// lastIndexOf()
let lastIndex = str.lastIndexOf("l");  // 3

// length
let length = str.length;  // 5

// replace()
let newStr = str.replace("Hello", "Hi");  // "Hi"

// replaceAll()
let replacedStr = "Hello Hello".replaceAll("Hello", "Hi");  // "Hi Hi"

// slice()
let sliced = str.slice(1, 4);  // "ell"

// split()
let splitArray = str.split("");  // ["H", "e", "l", "l", "o"]

// startsWith()
let starts = str.startsWith("He");  // true

// endsWith()
let ends = str.endsWith("lo");  // true

// substring()
let subStr = str.substring(1, 4);  // "ell"

// toLowerCase()
let lower = str.toLowerCase();  // "hello"

// toUpperCase()
let upper = str.toUpperCase();  // "HELLO"

// trim()
let trimmed = "  Hello  ".trim();  // "Hello"

// trimStart()
let trimmedStart = "  Hello  ".trimStart();  // "Hello  "

// trimEnd()
let trimmedEnd = "  Hello  ".trimEnd();  // "  Hello"

// padStart()
let paddedStart = "5".padStart(3, "0");  // "005"

// padEnd()
let paddedEnd = "5".padEnd(3, "0");  // "500"

// repeat()
let repeated = str.repeat(2);  // "HelloHello"

// match()
let match = "Hello123".match(/\d+/);  // ["123"]

// matchAll()
let matches = [..."Hello123".matchAll(/\d+/g)];  // [["123"]]

// search()
let searchIndex = "Hello123".search(/\d+/);  // 5

// valueOf()
let value = str.valueOf();  // "Hello"
